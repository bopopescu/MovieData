<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>blackjack | movies</title>

<script type="text/javascript" src="tinybox.js"></script>
<script src="jquery.min.js"></script>
<script src="https://sdk.amazonaws.com/js/aws-sdk-2.0.0-rc.14.min.js"></script>
<script src='Chart.min.js'></script>
<script src='mpaaline.js'></script>



<style>

body {
	font-family:"Brandon-alt","Helvetica Neue",Helvetica,Arial,
	sans-serif;
	font-weight:normal;
	color: #404040;
}

ul,li {
	list-style-type:none;
}

.wrap {
	width:100%;
	margin:0 auto;
}

#main {
	margin:0 auto !important;
	float:none;
}


.row-fluid {
	margin-bottom:0;
}

a,a:visited {
	opacity:.5;
	text-decoration:none
}

a:hover,a:focus,a:visited:hover,a:visited:focus {
	text-decoration:none;opacity:.5;
}

a:link,a:visited:link {
	-webkit-tap-highlight-color:rgb(0,0,0);
}


.fullwidthimage {
	position:relative;
	height:auto;
	overflow:hidden;
	top:0;z-index0;
	width:100%;
	background-repeat:no-repeat;
	background-size:cover;
	background-position:center center;
}

.fullwidthimage .title {
	position:relative;
	display:table;
	vertical-align:middle;
	width:100%;z-index:	1;
}

.fullwidthimage .title div {
	display:table-cell;
	vertical-align:middle;
	height:60em;
}

.fullwidthimage .title div h1 {
	font-family:"Brandon-alt","Helvetica Neue",Helvetica,Arial,
	sans-serif;
	font-weight:normal;
	font-style:normal;
	display:block;
	max-width:1040px;
	margin:0 auto;
	color:white;
	text-align:center;
	font-size:3.5em;
	letter-spacing:0.1em;
	text-transform:uppercase;
	line-height:1.05em;
}


.banner {
	top:0;
	padding-left:2em;
	background:white;
	z-index:20;
	width:100%;
	color:#404040;
}

.banner, .touch .banner {
	position:fixed !important;
}

.banner .container {
	width:100%;
	padding:0;
}

.banner .navbar-inner {
	margin:0;
	padding-bottom:1.4em;
}

.banner .navbar-inner .banner .navbar-inner .brand img {
	height:1.75em;
	float:left;
}

.banner .navbar-inner.nav {
	margin:0;
	background-color:transparent;
	text-align:right;
}



.banner .navbar-inner .nav li {
	float:none;
	display:inline;
}

.banner .navbar-inner .nav li a {
	font-family:"Brandon-alt","Helvetica Neue",Helvetica,Arial,sans-serif;
	font-weight:normal;
	font-style:normal;
	padding:0;
	text-transform:uppercase;
	letter-spacing:0.1em;
	font-size:0.75em;
	line-height:1em;
	color:#404040;
	background:transparent;
	text-shadow:none;
}

.banner .navbar-inner .nav li a:hover {
	background:white;
	opacity:.5;
}


.footer {
	clear:both;
}


.footer .nav {
	margin-right:4em;
	text-align:right;
	text-transform:uppercase;
	background:transparent;
}

.footer .nav li {
	float:none;
	display:inline;
}

.footer .nav li a {
	font-family:"Brandon-alt","Helvetica Neue",Helvetica,Arial,sans-serif;font-weight:normal;
	font-style:normal;
	letter-spacing:0.1em;
	font-size:1em;
	line-height:1em;
	color:#404040;
	background:transparent;
	text-shadow:none;
}

.footer a:hover {
	color:#cdccca !important;
}

.page-id-8 .fullwidthimage {
	position:relative;
}

.page-id-4 .fullwidthimage {
	position:relative;
}


@media only screen and (min-width: 1025px){.fullwidthimage{background-attachment:fixed;position:absolute}}
@media only screen and (max-width: 1024px){.fullwidthimage.home-logo .title div
h1{max-width:480px;font-size:3em}
.span6.rhcol{float:none;margin:0;width:100%}}
@media only screen and (max-width: 768px){body{font-size:90%}
.wrap{width:85% !important}
.fullwidthimage.home-logo .title div h1{max-width:600px;font-size:4em}

</style>


		

</head>



<body>
<div id="container">
<body class="home page page-id-4 page-template-default">
<header class="banner navbar navbar-static-top" role="banner">
<div class="navbar-inner">
		<!-- logo -->  
<a class="brand" href="index.html">  	
<img src="" alt="" />
</a>
		
		      
<nav class="nav-main nav-collapse" role="navigation">
<ul id="menu-primary-navigation" class="nav top-nav" >
		<!-- about -->
<li><a style="font-weight:bold; font-size:1.25em;" href="http://redwood.colorado.edu/syne7651/dm2/blackjack2.html">BLACKJACK<br></li>  
<li><a style="color:#404040; font-weight:120; font-size:1em;" href="http://redwood.colorado.edu/syne7651/dm2/about.html">ABOUT | </li>   
<li><a style="color:#404040; font-weight:120; font-size:1em;" href="http://redwood.colorado.edu/syne7651/dm2/archdiagram.html">ARCH.DIAGRAM | </li>
<li><a style="color:#404040; font-weight:120; font-size:1em;" href="http://redwood.colorado.edu/syne7651/dm2/movieminerarchitecture.html">MM.ARCH.DIAGRAM </li>
</ul>
</nav>
</div>
</header>
		<!-- end header -->
		
		
		
  		<!-- image 1 & title css -->
<div class="fullwidthimage" style="background-image: url(images/7.jpg) !important;">
<div class="title">
<div>
	<h1>GENRES OF RECENT RELEASES</h1>
</div>
</div>
</div>


<div class="wrap container-fluid"> 
<p style="text-align: center;"><canvas id="Genre" width="800" height="600"></canvas>


<script type="text/javascript">
  // See the Configuring section to configure credentials in the SDK
        AWS.config.accessKeyId = '';
        AWS.config.secretAccessKey = '';

		  // Configure your region
		  AWS.config.region = 'us-west-2';

</script>




 <script type="text/javascript">

 var bucket = new AWS.S3({params: {Bucket: 'blackjack-movieminer'}});

 var params = {
  Bucket: 'blackjack-movieminer', // required
  Key: 'AnalysisOutput/genre_analysis.json' ,// required

};

var response = 1;
response =bucket.getObject(params, function(err, data) {
  if (err) {
  console.log(err, err.stack); 
   document.getElementById('status').innerHTML =
       'Could not load objects from S3';
  }// an error occurred
  else{
      // successful response

       //document.getElementById('status').innerHTML =
       //data.Body.toString();
       obj = jQuery.parseJSON(data.Body.toString());
       console.log(obj);
       //display_title = obj.results[0].display_title;

    
	var GenreData = {
	labels : ["Comedy","Action & Adventure","Drama","Kids & Family","Romance","Horror","Mystery & Suspense",
	"Science Fiction & Fantasy","Animation","Classics","Art House & International","Documentary","Television",
	"Special Interest","Western","Musical & Performing Arts","Sports & Fitness","Cult Movies"],
	
	datasets : [
	{
            fillColor : "rgb(80,112,109)",
            strokeColor : "rgb(252,254,253)",
            data : [
            obj['Comedy'],
            obj['Action & Adventure'],
            obj["Drama"],
            obj["Kids & Family"],
            obj["Romance"],
            obj["Horror"],
            obj["Mystery & Suspense"],
	obj["Science Fiction & Fantasy"],
	obj["Animation"],obj["Classics"],obj["Art House & International"],obj["Documentary","Television"],
	obj["Special Interest"],obj["Western"],obj["Musical & Performing Arts"],obj["Sports & Fitness"],obj["Cult Movies"]
	]
    }
	]
}

    var Genre = document.getElementById('Genre').getContext('2d');
    new Chart(Genre).Bar(GenreData);



  }
});


// </script>
</li></ul></nav></h1>
</div>
</div>
</div>
<container>
   <scroller>
    <satellite/></p>      
<div class="row-fluid">
</div>		<!-- end #row-fluid -->
</div>		<!-- end #wrap  container-fluid -->

	
		
			<!-- image 2 & title css -->		
<div class="fullwidthimage" style="background-image: url(images/8.jpg) !important;">
<div class="title">
<div>
	<h1>MOVIES ON THE N.Y.T. THOUSAND BEST LIST</h1>
</div>
</div>
</div>


<div class="wrap container-fluid"> 

<p style="text-align: center;">
<canvas id="TH" width="600" height="400"></canvas>
</p>


<div class="fullwidthimage" style="background-image: url(images/10.jpg) !important;">
<div class="title">
<div>
	<h1>MPAA RATINGS PER DECADE</h1>
</div>
</div>
</div>


<div class="wrap container-fluid"> 
<p style="text-align: center;">30s<br>
<canvas id="three" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">40s<br>
<canvas id="four" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">50s<br>
<canvas id="five" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">60s<br>
<canvas id="six" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">70s<br>
<canvas id="seven" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">80s<br>
<canvas id="eight" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">90s<br>
<canvas id="nine" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">2000s<br>
<canvas id="ten" width="600" height="400"></canvas>
</p>
<p style="text-align: center;">2010s<br>
<canvas id="el" width="600" height="400"></canvas>
</p>

     
<div class="fullwidthimage" style="background-image: url(images/9.jpg) !important;">
<div class="title">
<div>
	<h1>MPAA RATINGS OVER TIME</h1>
</div>
</div>
</div>


<div class="wrap container-fluid"> 
<p style="text-align: center;">
<canvas id="mpaa" width="600" height="400"></canvas>
</p>









		<!-- footer -->			
<footer class="footer">
<div id="inner-footer" class="wrap">
<ul id="menu-footer-pages" class="nav footer-nav">

<nav>
<li id>
	<a style="font-weight:100;" href="http://redwood.colorado.edu/syne7651/dm2/about.html" ><br>Taylor Kohn<br>Trevor Gaylord<br>Noelle Beaujon<br>Sydney Nelson<br><br></li>
<ul>				
</nav>
</div> 		<!-- end #inner-footer -->
</footer>
</div> 		<!-- end #container -->



</body>
<script type="text/javascript">
  // See the Configuring section to configure credentials in the SDK
        AWS.config.accessKeyId = '';
        AWS.config.secretAccessKey = '';

		  // Configure your region
		  AWS.config.region = 'us-west-2';

</script>




 <script type="text/javascript">
 var bucket = new AWS.S3({params: {Bucket: 'blackjack-movieminer'}});

 var params = {
  Bucket: 'blackjack-movieminer', // required
  Key: 'AnalysisOutput/thousands_list.json' ,// required

};

response =bucket.getObject(params, function(err, data) {
  if (err) {
  console.log(err, err.stack); 
   // document.getElementById('status').innerHTML =
   //     'Could not load objects from S3';
  }// an error occurred
  else{
      // successful response

       //document.getElementById('status').innerHTML =
       //data.Body.toString();
       obj = jQuery.parseJSON(data.Body.toString());

       //display_title = obj.results[0].display_title;
var thirtiesY=0;
for (var i =1930;i<1931;i++){
  thirtiesY += obj[i].Yes.Count;
}

var fourtiesY=0;
for (var i =1940;i<1941;i++){
  fourtiesY += obj[i].Yes.Count;
}

var fiftiesY=0;
for (var i =1950;i<1951;i++){
  fiftiesY += obj[i].Yes.Count;
}

var sixY=0;
for (var i =1960;i<1961;i++){
  sixY += obj[i].Yes.Count;
}

var sevY=0;
for (var i =1970;i<1971;i++){
  sevY += obj[i].Yes.Count;
}

var eightY=0;
for (var i =1980;i<1981;i++){
  eightY += obj[i].Yes.Count;
}

var nineY=0;
for (var i =1990;i<1991;i++){
  nineY += obj[i].Yes.Count;
}

var tenY=0;
for (var i =2000;i<2001;i++){
  tenY += obj[i].Yes.Count;
}
    
	var GenreData = {
	labels : ["30's","40's","50's","60's","70's","80's","90's","00-02"],
	datasets : [
	{
            fillColor : "rgb(183,222,239)",
            strokeColor : "rgba(220,220,220,1)",
            data : [thirtiesY,fourtiesY,fiftiesY,sixY,sevY,eightY,nineY,tenY]
    }
	]
}

    var Genre = document.getElementById('TH').getContext('2d');
    new Chart(Genre).Bar(GenreData);



  }
});



</script>

<script type="text/javascript">
 var bucket = new AWS.S3({params: {Bucket: 'blackjack-movieminer'}});

 var params = {
  Bucket: 'blackjack-movieminer', // required
  Key: 'AnalysisOutput/mpaa_analyzer.json' ,// required

};

response =bucket.getObject(params, function(err, data) {
  if (err) {
  console.log(err, err.stack); 
   // document.getElementById('status').innerHTML =
   //     'Could not load objects from S3';
  }// an error occurred
  else{
      // successful response

       //document.getElementById('status').innerHTML =
       //data.Body.toString();
       obj = jQuery.parseJSON(data.Body.toString());

       //display_title = obj.results[0].display_title;
var thirtiesG=0;
var thirtiesPG=0;
var thirtiesPG13=0;
var thirtiesR=0;
for (var i =1930;i<1931;i++){
  thirtiesG += obj[i].G.Count;
}
for (var i =1930;i<1931;i++){
  thirtiesPG += obj[i].PG.Count;
}
for (var i =1930;i<1931;i++){
  thirtiesPG13 += obj[i].PG13.Count;
}
for (var i =1930;i<1931;i++){
  thirtiesR += obj[i].R.Count;
}

var fourtiesG=0;
var fourtiesPG=0;
var fourtiesPG13=0;
var fourtiesR=0;
for (var i =1940;i<1941;i++){
  fourtiesG += obj[i].G.Count;
}

for (var i =1940;i<1941;i++){
  fourtiesPG += obj[i].PG.Count;
}

for (var i =1940;i<1941;i++){
  fourtiesPG13 += obj[i].PG13.Count;
}

for (var i =1940;i<1941;i++){
  fourtiesR += obj[i].R.Count;
}

var fiftiesG=0;
var fiftiesPG=0;
var fiftiesPG13=0;
var fiftiesR=0;
for (var i =1950;i<1951;i++){
  fiftiesG += obj[i].G.Count;
}

for (var i =1950;i<1951;i++){
  fiftiesPG += obj[i].PG.Count;
}

for (var i =1950;i<1951;i++){
  fiftiesPG13 += obj[i].PG13.Count;
}

for (var i =1950;i<1951;i++){
  fiftiesR += obj[i].R.Count;
}

var sixG=0;
var sixPG=0;
var sixPG13=0;
var sixR=0;
for (var i =1960;i<1961;i++){
  sixG += obj[i].G.Count;
}

for (var i =1960;i<1961;i++){
  sixPG += obj[i].PG.Count;
}
for (var i =1960;i<1961;i++){
  sixPG13 += obj[i].PG13.Count;
}
for (var i =1960;i<1961;i++){
  sixR += obj[i].R.Count;
}

var sevG=0;
var sevPG=0;
var sevPG13=0;
var sevR=0;
for (var i =1970;i<1971;i++){
  sevG += obj[i].G.Count;
}

for (var i =1970;i<1971;i++){
  sevPG += obj[i].PG.Count;
}

for (var i =1970;i<1971;i++){
  sevPG13 += obj[i].PG13.Count;
}
for (var i =1970;i<1971;i++){
  sevR += obj[i].R.Count;
}

var eightG=0;
var eightPG=0;
var eightPG13=0;
var eightR=0;

for (var i =1980;i<1981;i++){
  eightG += obj[i].G.Count;
}

for (var i =1980;i<1981;i++){
  eightPG += obj[i].PG.Count;
}

for (var i =1980;i<1981;i++){
  eightPG13 += obj[i].PG13.Count;
}

for (var i =1980;i<1981;i++){
  eightR += obj[i].R.Count;
}

var nineG=0;
var ninePG=0;
var ninePG13=0;
var nineR=0;

for (var i =1990;i<1991;i++){
  nineG += obj[i].G.Count;
}

for (var i =1990;i<1991;i++){
  ninePG += obj[i].PG.Count;
}

for (var i =1990;i<1991;i++){
  ninePG13 += obj[i].PG13.Count;
}

for (var i =1990;i<1991;i++){
  nineR += obj[i].R.Count;
}

var tenG=0;
var tenPG=0;
var tenPG13=0;
var tenR=0;
for (var i =2000;i<2001;i++){
  tenG += obj[i].G.Count;
}

for (var i =2000;i<2001;i++){
  tenPG += obj[i].PG.Count;
}

for (var i =2000;i<2001;i++){
  tenPG13 += obj[i].PG13.Count;
}

for (var i =2000;i<2001;i++){
  tenR += obj[i].R.Count;
}

var elG=0;
var elPG=0;
var elPG13=0;
var elR=0;
for (var i =2010;i<2011;i++){
  elG += obj[i].G.Count;
}

for (var i =2010;i<2011;i++){
  elPG += obj[i].PG.Count;
}

for (var i =2010;i<2011;i++){
  elPG13 += obj[i].PG13.Count;
}

for (var i =2010;i<2011;i++){
  elR += obj[i].R.Count;
}

    
  var threeD = {
  labels : ["G","PG","PG13","R"],
  datasets : [
  {
            fillColor : "rgba(255,213,44,0.9)",
            strokeColor : "rgba(220,220,220,1)",
            data : [thirtiesG,thirtiesPG,thirtiesPG13,thirtiesR]
    }
  ]
};

    var three = document.getElementById('three').getContext('2d');
    new Chart(three).Bar(threeD);


      var fourD = {
      labels : ["G","PG","PG13","R"],
      datasets : [
      {
                fillColor : "rgba(255,213,44,0.9)",
                strokeColor : "rgba(220,220,220,1)",
                data : [fourtiesG,fourtiesPG,fourtiesPG13,fourtiesR]
        }
      ]
    };

    var four = document.getElementById('four').getContext('2d');
    new Chart(four).Bar(fourD);

    var fiveD = {
    labels : ["G","PG","PG13","R"],
    datasets : [
    {
              fillColor : "rgba(255,213,44,0.9)",
              strokeColor : "rgba(220,220,220,1)",
              data : [fiftiesG,fiftiesPG,fiftiesPG13,fiftiesR]
      }
    ]
  };

    var five = document.getElementById('five').getContext('2d');
    new Chart(five).Bar(fiveD);

    var sixD = {
    labels : ["G","PG","PG13","R"],
    datasets : [
    {
              fillColor : "rgba(255,213,44,0.9)",
              strokeColor : "rgba(220,220,220,1)",
              data : [sixG,sixPG,sixPG13,sixR]
      }
    ]
  };

    var six = document.getElementById('six').getContext('2d');
    new Chart(six).Bar(sixD);

    var sevD = {
    labels : ["G","PG","PG13","R"],
    datasets : [
    {
              fillColor : "rgba(255,213,44,0.9)",
              strokeColor : "rgba(220,220,220,1)",
              data : [sevG,sevPG,sevPG13,sevR]
      }
    ]
  };

    var sev = document.getElementById('seven').getContext('2d');
    new Chart(sev).Bar(sevD);

    var eightD = {
    labels : ["G","PG","PG13","R"],
    datasets : [
    {
              fillColor : "rgba(255,213,44,0.9)",
              strokeColor : "rgba(220,220,220,1)",
              data : [eightG,eightPG,eightPG13,eightR]
      }
    ]
  };

    var eight = document.getElementById('eight').getContext('2d');
    new Chart(eight).Bar(eightD);


      var nineD = {
    labels : ["G","PG","PG13","R"],
    datasets : [
    {
              fillColor : "rgba(255,213,44,0.9)",
              strokeColor : "rgba(220,220,220,1)",
              data : [nineG,ninePG,ninePG13,nineR]
      }
    ]
  };
    var nine = document.getElementById('nine').getContext('2d');
    new Chart(nine).Bar(nineD);


      var tenD = {
      labels : ["G","PG","PG13","R"],
      datasets : [
      {
                fillColor : "rgba(255,213,44,0.9)",
                strokeColor : "rgba(220,220,220,1)",
                data : [tenG,tenPG,tenPG13,tenR]
        }
      ]
    };
    var ten = document.getElementById('ten').getContext('2d');
    new Chart(ten).Bar(tenD);

      var elD = {
      labels : ["G","PG","PG13","R"],
      datasets : [
      {
                fillColor : "rgba(255,213,44,0.9)",
                strokeColor : "rgba(220,220,220,1)",
                data : [elG,elPG,elPG13,elR]
        }
      ]
    };
    var el = document.getElementById('el').getContext('2d');
    new Chart(el).Bar(elD);


  }
});


  // bucket.listObjects(function (err, data) {
  //   if (err) {
  //     document.getElementById('status').innerHTML =
  //       'Could not load objects from S3';
  //   } else {
  //     document.getElementById('status').innerHTML =
  //       'Loaded ' + data.Contents.length + ' items from S3';
  //     for (var i = 0; i < data.Contents.length; i++) {
  //       document.getElementById('objects').innerHTML +=
  //         '<li>' + data.Contents[i].Key + '</li>';
  //     }
  //   }
  // });
// </script>






<script type="text/javascript">
 var bucket = new AWS.S3({params: {Bucket: 'blackjack-movieminer'}});

 var params = {
  Bucket: 'blackjack-movieminer', // required
  Key: 'AnalysisOutput/mpaa_analyzer.json' ,// required

};

response =bucket.getObject(params, function(err, data) {
  if (err) {
  console.log(err, err.stack); 
   // document.getElementById('status').innerHTML =
   //     'Could not load objects from S3';
  }// an error occurred
  else{
      // successful response

       //document.getElementById('status').innerHTML =
       //data.Body.toString();
       obj = jQuery.parseJSON(data.Body.toString());

       //display_title = obj.results[0].display_title;
var thirtiesG=0;
var thirtiesPG=0;
var thirtiesPG13=0;
var thirtiesR=0;
for (var i =1930;i<1931;i++){
  thirtiesG += obj[i].G.Count;
}
for (var i =1930;i<1931;i++){
  thirtiesPG += obj[i].PG.Count;
}
for (var i =1930;i<1931;i++){
  thirtiesPG13 += obj[i].PG13.Count;
}
for (var i =1930;i<1931;i++){
  thirtiesR += obj[i].R.Count;
}

var fourtiesG=0;
var fourtiesPG=0;
var fourtiesPG13=0;
var fourtiesR=0;
for (var i =1940;i<1941;i++){
  fourtiesG += obj[i].G.Count;
}

for (var i =1940;i<1941;i++){
  fourtiesPG += obj[i].PG.Count;
}

for (var i =1940;i<1941;i++){
  fourtiesPG13 += obj[i].PG13.Count;
}

for (var i =1940;i<1941;i++){
  fourtiesR += obj[i].R.Count;
}

var fiftiesG=0;
var fiftiesPG=0;
var fiftiesPG13=0;
var fiftiesR=0;
for (var i =1950;i<1951;i++){
  fiftiesG += obj[i].G.Count;
}

for (var i =1950;i<1951;i++){
  fiftiesPG += obj[i].PG.Count;
}

for (var i =1950;i<1951;i++){
  fiftiesPG13 += obj[i].PG13.Count;
}

for (var i =1950;i<1951;i++){
  fiftiesR += obj[i].R.Count;
}

var sixG=0;
var sixPG=0;
var sixPG13=0;
var sixR=0;
for (var i =1960;i<1961;i++){
  sixG += obj[i].G.Count;
}

for (var i =1960;i<1961;i++){
  sixPG += obj[i].PG.Count;
}
for (var i =1960;i<1961;i++){
  sixPG13 += obj[i].PG13.Count;
}
for (var i =1960;i<1961;i++){
  sixR += obj[i].R.Count;
}

var sevG=0;
var sevPG=0;
var sevPG13=0;
var sevR=0;
for (var i =1970;i<1971;i++){
  sevG += obj[i].G.Count;
}

for (var i =1970;i<1971;i++){
  sevPG += obj[i].PG.Count;
}

for (var i =1970;i<1971;i++){
  sevPG13 += obj[i].PG13.Count;
}
for (var i =1970;i<1971;i++){
  sevR += obj[i].R.Count;
}

var eightG=0;
var eightPG=0;
var eightPG13=0;
var eightR=0;

for (var i =1980;i<1981;i++){
  eightG += obj[i].G.Count;
}

for (var i =1980;i<1981;i++){
  eightPG += obj[i].PG.Count;
}

for (var i =1980;i<1981;i++){
  eightPG13 += obj[i].PG13.Count;
}

for (var i =1980;i<1981;i++){
  eightR += obj[i].R.Count;
}

var nineG=0;
var ninePG=0;
var ninePG13=0;
var nineR=0;

for (var i =1990;i<1991;i++){
  nineG += obj[i].G.Count;
}

for (var i =1990;i<1991;i++){
  ninePG += obj[i].PG.Count;
}

for (var i =1990;i<1991;i++){
  ninePG13 += obj[i].PG13.Count;
}

for (var i =1990;i<1991;i++){
  nineR += obj[i].R.Count;
}

var tenG=0;
var tenPG=0;
var tenPG13=0;
var tenR=0;
for (var i =2000;i<2001;i++){
  tenG += obj[i].G.Count;
}

for (var i =2000;i<2001;i++){
  tenPG += obj[i].PG.Count;
}

for (var i =2000;i<2001;i++){
  tenPG13 += obj[i].PG13.Count;
}

for (var i =2000;i<2001;i++){
  tenR += obj[i].R.Count;
}

var elG=0;
var elPG=0;
var elPG13=0;
var elR=0;
for (var i =2010;i<2011;i++){
  elG += obj[i].G.Count;
}

for (var i =2010;i<2011;i++){
  elPG += obj[i].PG.Count;
}

for (var i =2010;i<2011;i++){
  elPG13 += obj[i].PG13.Count;
}

for (var i =2010;i<2011;i++){
  elR += obj[i].R.Count;
}

    
  var MpaaData = {
  labels : ["30's","40's","50's","60's","70's","80's","90's","00's","10's"],
  datasets : [
  {
            fillColor : "rgba(255,0,153,0.5)",
            strokeColor : "rgba(255,0,153,1)",
            data : [thirtiesG,fourtiesG,fiftiesG,sixG,sevG,eightG,nineG,tenG,elG]
    },
      {
            fillColor : "rgba(102,0,153,0.5)",
            strokeColor : "rgba(102,0,153,1)",
            data : [thirtiesPG,fourtiesPG,fiftiesPG,sixPG,sevPG,eightPG,ninePG,tenPG,elPG]
    },
      {
            fillColor : "rgba(0,0,204,0.5)",
            strokeColor : "rgba(0,0,204,1)",
            data : [thirtiesPG13,fourtiesPG13,fiftiesPG13,sixPG13,sevPG13,eightPG13,ninePG13,tenPG13,elPG13]
    },
      {
            fillColor : "rgba(0,204,0,0.5)",
            strokeColor : "rgba(0,204,0,1)",
            data : [thirtiesR,fourtiesR,fiftiesR,sixR,sevR,eightR,nineR,tenR,elR]
    }
  ]
}

    var mpaa = document.getElementById('mpaa').getContext('2d');
    new Chart(mpaa).Line(MpaaData);


  }
});


  // bucket.listObjects(function (err, data) {
  //   if (err) {
  //     document.getElementById('status').innerHTML =
  //       'Could not load objects from S3';
  //   } else {
  //     document.getElementById('status').innerHTML =
  //       'Loaded ' + data.Contents.length + ' items from S3';
  //     for (var i = 0; i < data.Contents.length; i++) {
  //       document.getElementById('objects').innerHTML +=
  //         '<li>' + data.Contents[i].Key + '</li>';
  //     }
  //   }
  // });
// </script>


</html>
